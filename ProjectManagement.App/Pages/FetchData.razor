@page "/fetchdata"
@using Contracts
@using ViewModels
@using Services  
@inject HttpClient Http
@*@inject IProjectDataService ProjectDataService*@ 

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Projects2 == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var project in Projects2)
            {
                <tr>
                    <td>@project.ProjectName</td>
                    <td>@project.Description</td>
                </tr>
                @foreach(var task in project.Tasks)
                { 
                    <tr>
                        <td>@task.TaskName</td>
                        <td>@task.Description</td>
                    </tr>
                }
            }
           
        </tbody>
    </table>
}

@code {
   
    //private WeatherForecast[] forecasts;
    //public IProjectDataService ProjectDataService;
    //public ICollection<ProjectViewModel> Projects { get; set; }
    //public ICollection<ProjectViewModel> projz { get; set; }

    //protected override async System.Threading.Tasks.Task OnInitializedAsync()
    //{
    //    //ICollection<ProjectViewModel> projz = await ProjectDataService.GetAllProjects();
    //    Projects = await ProjectDataService.GetAllProjects();
    //}
    //protected async override System.Threading.Tasks.Task OnParametersSetAsync()
    //{
    //    //projz = await ProjectDataService.GetAllProjects();
    //}


    //public class WeatherForecast
    //{
    //    public DateTime Date { get; set; }

    //    public int TemperatureC { get; set; }

    //    public string Summary { get; set; }

    //    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    //}
}
